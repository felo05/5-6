platform :ios, '16.0'  # Minimum iOS version for mobile_scanner and Firebase

# Disable CocoaPods analytics to speed up builds
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Locate Flutter installation
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, ensure Flutter setup is complete."
  end
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Run 'flutter pub get' first."
end

# Load Flutter dependencies
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Install all Flutter-managed pods
flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

target 'Runner' do
  use_frameworks!  # Required for Firebase and other frameworks
  use_modular_headers!  # Enable modular headers globally

  # Explicitly list key dependencies with modular headers
  pod 'SDWebImage', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'leveldb-library', :modular_headers => true
  pod 'nanopb', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseFirestore', :modular_headers => true
  pod 'FirebaseDatabase', :modular_headers => true
  pod 'FirebaseStorage', :modular_headers => true
  pod 'FirebaseInAppMessaging', :modular_headers => true
  pod 'FirebaseInstallations', :modular_headers => true
  pod 'FirebaseABTesting', :modular_headers => true
  pod 'FirebaseAppCheckInterop', :modular_headers => true
  pod 'FirebaseAuthInterop', :modular_headers => true
  pod 'FirebaseCoreExtension', :modular_headers => true
  pod 'FirebaseFirestoreInternal', :modular_headers => true
end

# Post-install script to enforce consistent build settings
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      # Ensure consistent iOS deployment target
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      # Enforce module generation for all dependencies
      config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      config.build_settings['DEFINES_MODULE'] = 'YES'
      # Fix Swift/ObjC compatibility and static library issues
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      # Prevent linking issues with static frameworks
      config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
      config.build_settings['OTHER_LDFLAGS'] << '-ObjC'
    end
  end
end